apply plugin: 'maven-publish'

javadoc {
    failOnError = false
}

publishing {
    publications {
        GnagPublication(MavenPublication) {
            from components.java
            artifactId gnagArtifactId

            artifact sourcesJar
            artifact javadocJar
        }
    }
}

bintray {
    dryRun = false
    publish = true
    user = project.hasProperty('user') ? project.property('user') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('key') ? project.property('key') : System.getenv('BINTRAY_KEY')
    publications = ['GnagPublication']
    pkg {
        repo = 'maven'
        name = gnagPluginName
        desc = gnagDescription
        licenses = ['Apache-2.0']
        labels = gnagLabels
        vcsUrl = gnagGitUrl
        version {
            name = gnagPluginVersion
            vcsTag = gnagPluginVersion
            released  = new Date()
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task createClasspathManifest {
    def outputDir = file("$buildDir/$name")

    inputs.files sourceSets.main.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
    }
}

dependencies {
    testRuntime files(createClasspathManifest)
}
