{
  "name": "Gnag",
  "tagline": "A Gradle plugin that helps facilitate GitHub PR checking and automatic commenting of violations.",
  "body": "# Gnag \r\n\r\n<a href=\"https://travis-ci.org/btkelly/gnag\"><img src=\"https://travis-ci.org/btkelly/gnag.svg\" /></a> [![Coverage Status](https://coveralls.io/repos/btkelly/gnag/badge.svg?branch=master&service=github)](https://coveralls.io/github/btkelly/gnag?branch=master) <a href=\"http://www.detroitlabs.com/\"><img src=\"https://img.shields.io/badge/Sponsor-Detroit%20Labs-000000.svg\" /></a> <a href='https://bintray.com/btkelly/maven/gnag-gradle-plugin/_latestVersion'><img src='https://api.bintray.com/packages/btkelly/maven/gnag-gradle-plugin/images/download.svg'></a> [![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-gnag-green.svg?style=true)](https://android-arsenal.com/details/1/3128)\r\n\r\nA Gradle plugin that helps facilitate GitHub PR checking and automatic commenting of violations for Android projects.\r\n\r\n## Usage\r\n\r\n**Requires JDK 8**\r\n\r\nGnag is meant to be simple to use and easy to drop in to any Android project. Shown below is the simplest\r\nGnag setup that will report violations to GitHub. By default this config will report PMD, Findbugs, Checkstyle and\r\nAndroid Lint to GitHub.\r\n\r\n```groovy\r\nbuildscript {\r\n    repositories {\r\n        jcenter()\r\n    }\r\n    dependencies {\r\n        classpath 'com.btkelly:gnag:{current version}'\r\n    }\r\n}\r\n\r\napply plugin: 'gnag'\r\n\r\ngnag {\r\n    github {\r\n        repoName 'btkelly/repo'\r\n        authToken '0000000000000'\r\n        issueNumber '1'\r\n    }\r\n}\r\n```\r\n\r\nThis is the simplest way to add automatic PR checking and commenting to your project. The options defined in the `github` closure can be overridden by passing command line parameters with the same name to your build. This is helpful when using in conjunction with a CI system to allow automated builds.\r\n\r\n#### Tasks\r\n\r\nYou can use the gnagCheck gradle task to run Gnag locally and generate an HTML report in the build directory.\r\n```groovy\r\n./gradlew clean gnagCheck\r\n```\r\n\r\nYou can use the gnagReport task which will first run gnagCheck and then report detected violations to the GitHub issue specified.\r\nIn this example the issue number and authtoken for the comment user are passed as commandline arguments.\r\n```groovy\r\n./gradlew clean gnagReport -PissueNumber=11 -PauthToken=iu2n3iu2nfjknfjk23nfkj23nk\r\n```\r\n\r\n#### Customization\r\n\r\n```groovy\r\ngnag {\r\n    enabled true\r\n    failOnError true\r\n    checkstyle {\r\n        enabled true\r\n        reporterConfig project.file('config/checkstyle.xml')\r\n    }\r\n    pmd {\r\n        enabled true\r\n        reporterConfig project.file('config/pmd.xml')\r\n    }\r\n    findbugs {\r\n        enabled true\r\n        reporterConfig project.file('config/findbugs.xml')\r\n    }\r\n    androidLint {\r\n        enabled true\r\n        severity 'Error'\r\n    }\r\n    github {\r\n        repoName 'btkelly/repo'\r\n        authToken '0000000000000'\r\n        issueNumber '1'\r\n    }\r\n}\r\n```\r\n\r\n- ***enabled*** - easily disable Gnag in specific situations\r\n- ***failOnError*** - should violations cause the build to fail or just generate a report\r\n- ***checkstyle*** - block to customize the checkstyle reporter\r\n  - ***enabled*** - set if checkstyle should execute\r\n  - ***reporterConfig*** - provide a custom [checkstyle config](http://checkstyle.sourceforge.net/config.html)\r\n- ***pmd*** - block to customize the pmd reporter\r\n  - ***enabled*** - set if pmd should execute\r\n  - ***reporterConfig*** - provide a custom [pmd config](http://pmd.sourceforge.net/pmd-5.1.1/howtomakearuleset.html)\r\n- ***findbugs*** - block to customize the findbugs reporter\r\n  - ***enabled*** - set if findbugs should execute\r\n  - ***reporterConfig*** - provide a custom [findbugs config](http://findbugs.sourceforge.net/manual/filter.html)\r\n- ***androidLint*** - block to customize the android lint reporter\r\n  - ***enabled*** - set if the android lint reporter should look for a lint report\r\n  - ***severity*** - can be 'Error' or 'Warning' depending on which severity you want Gnag to check\r\n- ***github*** - block to customize GitHub reporting (only used during the `gnagReport` task\r\n  - ***repoName*** - account and repo name to report violations to\r\n  - ***authToken*** - a GitHub token for a user that has access to comment on issues to the specified repo\r\n  - ***issueNumber*** - the issue or PR number currently being built\r\n\r\n## Example Output\r\n\r\nBelow are examples of output posted to a GitHub PR on a project using Gnag to enforce quality checks.\r\n\r\n### Inline Comments\r\n\r\nViolations associated with a specific line in your PR will be posted as comments on that line:\r\n\r\n![](https://raw.githubusercontent.com/btkelly/gnag/master/assets/comments-inline.png)\r\n\r\n### Aggregated Comments\r\n\r\nViolations that cannot be associated with a specific line in your PR will be aggregated and posted in a single top-level PR comment. This will include:\r\n\r\n- violations associated with entire files or projects;\r\n- violations detected by individual reporters with invalid file location information.\r\n\r\n![](https://raw.githubusercontent.com/btkelly/gnag/master/assets/comments-aggregated.png)\r\n\r\n## Example [Travis CI](http://travis-ci.org) Usage\r\n\r\nTravis is a continuous integration service and is free for open source projects. Below is an example of\r\n how to configure Gnag to run on Travis.\r\n\r\n You must set an environment variable on your Travis instance for the `PR_BOT_AUTH_TOKEN` used to post comments back to GitHub.\r\n\r\n***.travis.yml***\r\n```yml\r\nlanguage: android\r\nandroid:\r\n  components:\r\n  - platform-tools\r\n  - tools\r\n  - build-tools-23.0.2\r\n  - android-23\r\njdk:\r\n  - oraclejdk8\r\nbranches:\r\n  only:\r\n  - master\r\nscript: \"./travis-build.sh\"\r\n```\r\n\r\n***travis-build.sh***\r\n```bash\r\n#!/bin/bash\r\nset -ev\r\n\r\nif [ \"${TRAVIS_PULL_REQUEST}\" = \"false\" ]; then\r\n\t./gradlew clean gnagCheck\r\nelse\r\n\t./gradlew clean gnagReport -PauthToken=\"${PR_BOT_AUTH_TOKEN}\" -PissueNumber=\"${TRAVIS_PULL_REQUEST}\"\r\nfi\r\n```\r\n\r\n### License\r\n\r\n    Copyright 2016 Bryan Kelly\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n",
  "google": "UA-73153943-1",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}